MacIntel_task:
  macos_instance:
    image: big-sur-base

  script: |
     brew update
     brew install objc-codegenutils objc-run
     brew install git python cmake fftw gcc qt5 lcov pkg-config zlib cmake libtiff cfitsio hdf5 gsl clfft pandoc
     brew install iltommi/brews/hdf4
     mkdir -p build_gcc && cd build_gcc
     cmake -DCMAKE_CXX_COMPILER=g++-12 -DQt5_DIR=`brew --prefix qt@5`/lib/cmake/Qt5 -DNEUTRINO_SKIP_PLUGINS=Shell ..
     make -j$(sysctl -n hw.ncpu) install
     ../resources/macPackage/prepareapp.sh
     cp Neutrino-`uname -s`-`uname -m`.* ..
  artifacts:
    path: "Neutrino-Darwin-*.*"

MacM1_task:
  macos_instance:
    image: ghcr.io/cirruslabs/macos-monterey-base:latest

  script: |
     brew update
     brew install objc-codegenutils objc-run
     brew install git python cmake fftw gcc qt5 lcov pkg-config zlib cmake libtiff cfitsio hdf5 gsl clfft pandoc
     brew install iltommi/brews/hdf4
     mkdir -p build_gcc && cd build_gcc
     cmake -DCMAKE_CXX_COMPILER=g++-12 -DQt5_DIR=`brew --prefix qt@5`/lib/cmake/Qt5 -DNEUTRINO_SKIP_PLUGINS=Shell ..
     make -j$(sysctl -n hw.ncpu) install
     ../resources/macPackage/prepareapp.sh
     cp Neutrino-`uname -s`-`uname -m`.* ..
  artifacts:
    path: "Neutrino-Darwin-*.*"

AppImage_task:
    container:
        image: appimagecrafters/appimage-builder:latest

    env:
        DEBIAN_FRONTEND: noninteractive
        APPIMAGE_EXTRACT_AND_RUN: 1

    # Instructions:
    script: |
      apt-get update -qq && apt-get install -yy wget git pandoc cmake libnetpbm10-dev libhdf5-dev libfftw3-dev libhdf4-dev g++ build-essential libtiff5-dev libgsl-dev qt5-default qtmultimedia5-dev qttools5-dev libqt5svg5-dev libqt5scripttools5 qtscript5-dev libqt5multimediawidgets5 qttools5-dev-tools libqt5multimedia5 libqt5multimedia5-plugins lsb-release libcfitsio-dev libhdf4-dev libhdf5-dev libhdf5-100
      wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage 
      wget https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage
      chmod +x linuxdeploy*.AppImage
      mkdir build && cd build
      cmake -DNEUTRINO_SKIP_PLUGINS='Shell' -DCMAKE_INSTALL_PREFIX=/usr ..
      make install DESTDIR=AppDir
      LD_LIBRARY_PATH=AppDir/usr/lib ../linuxdeploy-x86_64.AppImage --appdir AppDir --plugin qt --output appimage --custom-apprun=../resources/linuxPackage/AppRun
      cp Neutrino-*.AppImage ..
    artifacts:
      path: "Neutrino-*.*"

Cross64_task:
    container:
        image: fedora:32
    script: |
      dnf clean all
      dnf -y --nogpgcheck update
      dnf -y install cmake git mingw64-qt5* mingw64-gcc-c++ mingw64-gcc mingw64-gcc-gfortran mingw64-libgomp mingw64-gsl mingw64-zlib mingw32-nsis unzip wget autoconf automake bash bison bzip2 flex gcc-c++ gdk-pixbuf2-devel gettext git gperf intltool make sed libffi-devel libtool openssl-devel p7zip patch perl pkgconfig python ruby scons unzip wget xz gtk-doc dh-autoreconf mingw64-portablexdr pandoc mingw64-python3 mingw64-python3-numpy mingw64-cfitsio
      set -e
      set -x
      wget http://www.fftw.org/fftw-3.3.6-pl2.tar.gz
      tar -zxvf fftw-3.3.6-pl2.tar.gz
      cd fftw-3.3.6-pl2
      mingw64-configure --disable-static --enable-shared --enable-threads --with-combined-threads
      make -j $(nproc) bin_PROGRAMS= sbin_PROGRAMS= noinst_PROGRAMS=    
      make install bin_PROGRAMS= sbin_PROGRAMS= noinst_PROGRAMS=   
      cd ..

      wget https://support.hdfgroup.org/ftp/HDF/releases/HDF4.2.10/src/hdf-4.2.10.tar.bz2
      tar -jxvf hdf-4.2.10.tar.bz2 && cd hdf-4.2.10
      wget https://raw.githubusercontent.com/iltommi/mxe/master/src/hdf4-1-portability-fixes.patch
      wget https://raw.githubusercontent.com/iltommi/mxe/master/src/hdf4-2-dllimport.patch
      patch -p1 -u < hdf4-1-portability-fixes.patch
      patch -p1 -u < hdf4-2-dllimport.patch 
      libtoolize --force
      autoreconf --install
      mingw64-configure --disable-static --enable-shared --disable-fortran --disable-netcdf LIBS="-lportablexdr -lws2_32"  CPPFLAGS="-DH4_F77_FUNC\(name,NAME\)=NAME -DH4_BUILT_AS_DYNAMIC_LIB=1 -DBIG_LONGS"
      make -C mfhdf/xdr -j $(nproc) LDFLAGS="-no-undefined -lssp"
      make -C hdf/src -j $(nproc) LDFLAGS="-no-undefined -lssp"
      make -C hdf/src -j 1 install
      make -C mfhdf/libsrc -j $(nproc) LDFLAGS="-no-undefined -ldf"
      make -C mfhdf/libsrc -j 1 install
      cd ..
      mkdir build && cd build
      mingw64-cmake -DNEUTRINO_SKIP_PLUGINS='Shell' ..
      make -j2 package
      cp Neutrino*.exe Neutrino*.zip ..
      
    artifacts:
      path: "Neutrino-*.*"
