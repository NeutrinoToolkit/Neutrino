env:
  GITHUB_TOKEN: ENCRYPTED[18193866998b557c5b35bf6c73d2cd10722ac207b132cdf6e537fcbc712b01266303cc5b950b4ec6b1a69b9a48231190]
  GH_TOKEN: ENCRYPTED[18193866998b557c5b35bf6c73d2cd10722ac207b132cdf6e537fcbc712b01266303cc5b950b4ec6b1a69b9a48231190]

MacIntel_task:
  macos_instance:
    image: big-sur-base
  script: |
    brew update
    brew install objc-codegenutils objc-run gh
    brew install libomp git cmake fftw gcc qt lcov pkg-config zlib cmake libtiff cfitsio hdf5 gsl clfft pandoc
    brew install iltommi/brews/hdf4
    mkdir -p build_gcc && cd build_gcc
    cmake ..
    make -j$(sysctl -n hw.ncpu) install
    ../resources/macPackage/prepareapp.sh
    gh release upload --clobber latest Neutrino-`uname -s`-`uname -m`.*
    cp Neutrino-`uname -s`-`uname -m`.* ..         
  artifacts:
    path: "Neutrino-Darwin-*.*"

MacM1_task:
  macos_instance:
    image: ghcr.io/cirruslabs/macos-monterey-base:latest
  script: |
    brew update
    brew install objc-codegenutils objc-run gh
    brew install libomp git cmake fftw gcc qt lcov pkg-config zlib cmake libtiff cfitsio hdf5 gsl clfft pandoc
    brew install iltommi/brews/hdf4
    mkdir -p build_gcc && cd build_gcc
    cmake ..
    make -j$(sysctl -n hw.ncpu) install
    ../resources/macPackage/prepareapp.sh
    gh release upload --clobber latest Neutrino-`uname -s`-`uname -m`.*
    cp Neutrino-`uname -s`-`uname -m`.* ..
  artifacts:
    path: "Neutrino-Darwin-*.*"

AppImage_task:
  container:
    image: fedora:36
  script: |
    dnf -y install gcc gcc-c++ python2 python2-devel qconf libtiff-devel gsl-devel redhat-lsb-core blas-devel pandoc hdf-devel hdf5-devel cfitsio-devel fftw3-devel rpm-build qt6-* git vim wget
    wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage 
    wget https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage
    chmod +x linuxdeploy*.AppImage
    mkdir build && cd build
    cmake -DCMAKE_INSTALL_PREFIX=/usr ..
    make install DESTDIR=AppDir
    APPIMAGE_EXTRACT_AND_RUN=1 LD_LIBRARY_PATH=AppDir/usr/lib ../linuxdeploy-x86_64.AppImage --appdir AppDir --plugin qt --output appimage --custom-apprun=../resources/linuxPackage/AppRun --icon-file=../resources/icons/neutrino.svg
    cp Neutrino-*.AppImage ..
    gh release upload --clobber latest Neutrino-*.AppImage
  artifacts:
    path: "Neutrino-*.AppImage"

# Cross32_task:
#   container:
#     image: fedora:32
#   depends_on: tag
#   script: |
#     dnf clean all
#     dnf -y --nogpgcheck update
#     dnf -y install cmake git mingw32-qt5* mingw32-gcc-c++ mingw32-gcc mingw32-gcc-gfortran mingw32-libgomp mingw32-gsl mingw32-zlib mingw32-nsis unzip wget autoconf automake bash bison bzip2 flex gcc-c++ gdk-pixbuf2-devel gettext git gperf intltool make sed libffi-devel libtool openssl-devel p7zip patch perl pkgconfig python ruby scons unzip wget xz gtk-doc dh-autoreconf mingw32-portablexdr pandoc mingw32-cfitsio
#     wget http://www.fftw.org/fftw-3.3.6-pl2.tar.gz
#     tar -zxvf fftw-3.3.6-pl2.tar.gz
#     cd fftw-3.3.6-pl2
#     mingw32-configure --disable-static --enable-shared --enable-threads --with-combined-threads 
#     make -j $(nproc) bin_PROGRAMS= sbin_PROGRAMS= noinst_PROGRAMS= 
#     make install bin_PROGRAMS= sbin_PROGRAMS= noinst_PROGRAMS=  
#     cd ..
#     wget https://support.hdfgroup.org/ftp/HDF/releases/HDF4.2.10/src/hdf-4.2.10.tar.bz2
#     tar -jxvf hdf-4.2.10.tar.bz2 && cd hdf-4.2.10
#     wget https://raw.githubusercontent.com/iltommi/mxe/master/src/hdf4-1-portability-fixes.patch
#     wget https://raw.githubusercontent.com/iltommi/mxe/master/src/hdf4-2-dllimport.patch
#     patch -p1 -u < hdf4-1-portability-fixes.patch
#     patch -p1 -u < hdf4-2-dllimport.patch
#     libtoolize --force
#     autoreconf --install
#     mingw32-configure --disable-static --enable-shared --disable-fortran --disable-netcdf LIBS="-lportablexdr -lws2_32"  CPPFLAGS="-DH4_F77_FUNC\(name,NAME\)=NAME -DH4_BUILT_AS_DYNAMIC_LIB=1 -DBIG_LONGS"
#     make -C mfhdf/xdr -j $(nproc) LDFLAGS=-no-undefined
#     make -C hdf/src -j $(nproc) LDFLAGS=-no-undefined
#     make -C hdf/src -j 1 install
#     make -C mfhdf/libsrc -j $(nproc) LDFLAGS="-no-undefined -ldf"
#     make -C mfhdf/libsrc -j 1 install 
#     cd ..
#     mkdir build && cd build
#     mingw32-cmake -DNEUTRINO_SKIP_PLUGINS='Function' ..
#     make -j2 package
#     cp Neutrino*.exe Neutrino*.zip ..
#   artifacts:
#     path: "Neutrino-*.*"


# Cross64_task:
#   container:
#       image: fedora:32
#   depends_on: tag
#   script: |
#     dnf clean all
#     dnf -y --nogpgcheck update
#     dnf -y install cmake git mingw64-qt5* mingw64-gcc-c++ mingw64-gcc mingw64-gcc-gfortran mingw64-libgomp mingw64-gsl mingw64-zlib mingw32-nsis unzip wget autoconf automake bash bison bzip2 flex gcc-c++ gdk-pixbuf2-devel gettext git gperf intltool make sed libffi-devel libtool openssl-devel p7zip patch perl pkgconfig python ruby scons unzip wget xz gtk-doc dh-autoreconf mingw64-portablexdr pandoc mingw64-cfitsio
#     set -e
#     set -x
#     wget http://www.fftw.org/fftw-3.3.6-pl2.tar.gz
#     tar -zxvf fftw-3.3.6-pl2.tar.gz
#     cd fftw-3.3.6-pl2
#     mingw64-configure --disable-static --enable-shared --enable-threads --with-combined-threads
#     make -j $(nproc) bin_PROGRAMS= sbin_PROGRAMS= noinst_PROGRAMS=    
#     make install bin_PROGRAMS= sbin_PROGRAMS= noinst_PROGRAMS=   
#     cd ..
#     wget https://support.hdfgroup.org/ftp/HDF/releases/HDF4.2.10/src/hdf-4.2.10.tar.bz2
#     tar -jxvf hdf-4.2.10.tar.bz2 && cd hdf-4.2.10
#     wget https://raw.githubusercontent.com/iltommi/mxe/master/src/hdf4-1-portability-fixes.patch
#     wget https://raw.githubusercontent.com/iltommi/mxe/master/src/hdf4-2-dllimport.patch
#     patch -p1 -u < hdf4-1-portability-fixes.patch
#     patch -p1 -u < hdf4-2-dllimport.patch 
#     libtoolize --force
#     autoreconf --install
#     mingw64-configure --disable-static --enable-shared --disable-fortran --disable-netcdf LIBS="-lportablexdr -lws2_32"  CPPFLAGS="-DH4_F77_FUNC\(name,NAME\)=NAME -DH4_BUILT_AS_DYNAMIC_LIB=1 -DBIG_LONGS"
#     make -C mfhdf/xdr -j $(nproc) LDFLAGS="-no-undefined -lssp"
#     make -C hdf/src -j $(nproc) LDFLAGS="-no-undefined -lssp"
#     make -C hdf/src -j 1 install
#     make -C mfhdf/libsrc -j $(nproc) LDFLAGS="-no-undefined -ldf"
#     make -C mfhdf/libsrc -j 1 install
#     cd ..
#     mkdir build && cd build
#     mingw64-cmake ..
#     make -j2 package
#     cp Neutrino*.exe Neutrino*.zip ..      
#   artifacts:
#     path: "Neutrino-*.*"
