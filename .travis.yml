language: cpp

os: 
  - linux
  - osx

git:
  depth: 9999999

sudo: required
dist: trusty
osx_image: xcode7.1

branches:
  only:
    - master
    
before_install:
  - git fetch -t
  - git checkout $TRAVIS_BRANCH
  - git config --global user.email "builds@travis-ci.com"
  - git config --global user.name "Travis CI"
  - git fetch -t
  - export MY_TAG="release-${TRAVIS_OS_NAME}"
  - git push --quiet https://${github_token}@github.com/iltommi/neutrino --delete origin ${MY_TAG}
  - git tag -fa "${MY_TAG}" -m "Travis CI https://travis-ci.org/iltommi/neutrino"
  - git push --quiet https://${github_token}@github.com/iltommi/neutrino ${MY_TAG}
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]] 
    then 
      sudo add-apt-repository --yes ppa:ubuntu-sdk-team/ppa
      sudo apt-get update -qq
      sudo apt-get install -y cmake g++ libcfitsio3-dev libhdf5-dev libtiff5-dev libfftw3-dev libfftw3-3 libgsl0-dev gsl-bin libhdf4-dev build-essential
      wget http://download.qt.io/official_releases/qt/5.6/5.6.0/qt-opensource-linux-x64-5.6.0.run
      git clone https://github.com/benlau/qtci.git
      bash qtci/bin/extract-qt-installer qt-opensource-linux-x64-5.6.0.run ~/Qt
    fi
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]
    then 
      brew update
      brew tap homebrew/science
      brew install clang-omp qt5 cfitsio cmake hdf4 hdf5 gsl
      brew install fftw --with-openmp
    fi
  # pythonqt
  - git clone https://github.com/iltommi/PythonQt.git
  - cd PythonQt
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cmake -DQt5_DIR=~/Qt -DPythonQt_Wrap_QtAll=TRUE .; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then cmake -DCMAKE_CXX_COMPILER=/usr/local/bin/clang-omp++ -DQt5_DIR=/usr/local/opt/qt5/lib/cmake/Qt5 -UQT_QMAKE_EXECUTABLE -DPythonQt_Wrap_QtAll=TRUE .; fi
  - make 
  - make install
  - cd ..

script:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]
    then 
      cmake -DCMAKE_CXX_COMPILER=/usr/local/bin/clang-omp++ -DQt5_DIR=/usr/local/opt/qt5/lib/cmake/Qt5 .
    fi
  - make

install:

before_deploy:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]
    then 
      export RELEASE_FILE=Neutrino.dmg
      /usr/local/opt/qt5/bin/macdeployqt Neutrino.app
      git clone https://github.com/iltommi/macdeployqtfix.git
      python macdeployqtfix/macdeployqtfix.py Neutrino.app/Contents/MacOS/Neutrino /usr/local
      /usr/libexec/PlistBuddy -c "Add NSPrincipalClass string NSApplication" Neutrino.app/Contents/Info.plist
      /usr/libexec/PlistBuddy -c "Add NSHighResolutionCapable bool True" Neutrino.app/Contents/Info.plist
      mkdir -p dmg
      cp -r Neutrino.app dmg
      ./resources/macPackage/createdmg.sh --icon-size 96 --volname Neutrino --volicon resources/icons/icon.icns --background resources/macPackage/sfondo.png --window-size 420 400 --icon Neutrino.app 90 75 --app-drop-link 320 75 Neutrino.dmg dmg && rm -rf dmg
    fi
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]
    then 
      export RELEASE_FILE=Neutrino.deb
    fi
  
deploy:
  provider: releases
  api_key: $github_token
  file: "${RELEASE_FILE}"
  skip_cleanup: true
