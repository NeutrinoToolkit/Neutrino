language: cpp

os: osx

git:
  depth: 9999999

sudo: required
dist: trusty
osx_image: xcode7.2

branches:
  only:
    - master
    
before_install:
  - git fetch -t
  - git symbolic-ref $TRAVIS_BRANCH
  - git describe --abbrev=0 --tags
  - git rev-list master $(git describe --abbrev=0 --tags)^..$TRAVIS_BRANCH --count
  - git rev-parse --short $TRAVIS_BRANCH
  - git tag -a $(git describe --abbrev=0 --tags).$(git rev-list master $(git describe --abbrev=0 --tags)^..$TRAVIS_BRANCH --count) -m "Travis CI https://travis-ci.org/iltommi/neutrino"
  - git tag
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo add-apt-repository --yes ppa:ubuntu-sdk-team/ppa; sudo apt-get update -qq; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install -y qt5-default qtbase5-dev libqt5svg5 libqt5svg5-dev qtmultimedia5-dev qttools5-dev libqt5multimediawidgets5 libqt5clucene5 libqt5designer5 libqt5designercomponents5 libqt5help5 libqt5printsupport5; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install -y cmake g++ libcfitsio3-dev libhdf5-dev libtiff5-dev libfftw3-dev libfftw3-3 libgsl0-dev gsl-bin libhdf4-dev build-essential; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update && brew tap homebrew/science; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install gcc qt5 cfitsio cmake hdf4 hdf5 gsl; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install fftw --with-openmp; fi
  # pythonqt
  - git clone https://github.com/iltommi/PythonQt.git
  - cd PythonQt
  - mkdir -p compile && cd compile
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cmake -DQt5_DIR=/usr/lib/x86_64-linux-gnu -DPythonQt_Wrap_QtAll=TRUE .. && make && make install; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then cmake -DQt5_DIR=/usr/local/opt/qt5/lib/cmake/Qt5 -UQT_QMAKE_EXECUTABLE -DPythonQt_Wrap_QtAll=TRUE .. && make && make install; fi
  - cd ../..

script:
  - make

install:

before_deploy:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export RELEASE_FILE=Neutrino.dmg; fi
  - if [[ "$TRAVIS_OS_NAME" == "Linux" ]]; then export RELEASE_FILE=Neutrino.deb; fi
  
deploy:
  provider: releases
  api_key: $github_token
  file: "${RELEASE_FILE}"
  skip_cleanup: true
  overwrite: true
  on:
    tags: true
