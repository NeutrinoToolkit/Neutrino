language: cpp

matrix:
  include:
    - os: osx
      osx_image: xcode7.3
    - os: linux
      dist: trusty
      sudo: required

before_install:
- |
  if [[ "$TRAVIS_OS_NAME" == "osx" ]]
  then
    export CMAKE_FLAGS='-DCMAKE_CXX_COMPILER=g++-6  -DQt5_DIR=${Qt5_DIR}'
    export Qt5_DIR=/usr/local/opt/qt5/lib/cmake/Qt5
    brew update; brew tap homebrew/science
    brew install gcc qt5 cfitsio cmake hdf4 hdf5 gsl netpbm
    brew install fftw --with-openmp
    git clone https://github.com/iltommi/PythonQt.git
    cd PythonQt
    cmake -DCMAKE_CXX_COMPILER=${COMPILER} -DQt5_DIR=${Qt5_DIR} -UQT_QMAKE_EXECUTABLE -DPythonQt_Wrap_QtAll=TRUE .
    make 
    sudo make install
    cd ..
  fi
- |
 if [[ "$TRAVIS_OS_NAME" == "linux" ]]
 then
    export CMAKE_FLAGS=''
    sudo add-apt-repository ppa:george-edison55/cmake-3.x --yes
    sudo apt-get update -qy
    sudo apt-get -yy install cmake qt5-default libnetpbm10-dev libhdf5-dev libfftw3-dev python-dev libhdf4-dev  g++ build-essential libtiff5-dev libgsl0-dev qtmultimedia5-dev qttools5-dev libqt5svg5-dev libqt5multimediawidgets5 qttools5-dev-tools
 fi

script:
- mkdir -p build_dir && cd build_dir
- cmake ${CMAKE_FLAGS} ..
- make
- cd ..

install:

before_deploy:
- |
  if [[ "$TRAVIS_OS_NAME" == "osx" ]]
  then
    cp -r build_dir/Neutrino.app .
    /usr/local/opt/qt5/bin/macdeployqt Neutrino.app
    git clone https://github.com/iltommi/macdeployqtfix.git
    python macdeployqtfix/macdeployqtfix.py Neutrino.app/Contents/MacOS/Neutrino /usr/local
    /usr/libexec/PlistBuddy -c "Add NSHighResolutionCapable bool True" Neutrino.app/Contents/Info.plist
    mkdir dmg
    mv Neutrino.app dmg
    export RELEASE_FILE=Neutrino.dmg
    ./resources/macPackage/createdmg.sh --icon-size 96 --volname Neutrino --volicon ./resources/icons/icon.icns --background ./resources/macPackage/sfondo.png --window-size 420 400 --icon Neutrino.app 90 75 --app-drop-link 320 75 ${RELEASE_FILE} dmg
  fi
- |
  if [[ "$TRAVIS_OS_NAME" == "linux" ]]
    export RELEASE_FILE=Neutrino*.deb
  fi
  
deploy:
  provider: releases
  edge:
    branch: releases-fix
  api_key: $github_token
  file: "${RELEASE_FILE}"
  skip_cleanup: true
  overwrite: true
  on:
    tags: true
